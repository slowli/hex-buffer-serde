name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Minimum supported Rust version.
  msrv: 1.66.0
  # Nightly Rust toolchain for no-std build.
  nightly: nightly-2023-09-09

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install cargo-deny
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-deny
          version: "^0.14"

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo

      - name: Format
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: Clippy lib (default features)
        run: cargo clippy -p hex-buffer-serde --lib -- -D warnings

      - name: Check dependencies
        run: cargo deny --all-features check

      - name: Run tests
        run: cargo test --workspace
      - name: Run example
        run: cargo run --example ed25519 --all-features

      - name: Compile WASM
        run: (cd wasm; wasm-pack build --target nodejs)
      - name: Run WASM
        run: node wasm/test.js

  build-msrv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.msrv }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-msrv-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-msrv-cargo

      - name: Run tests
        run: cargo test --workspace
      - name: Run example
        run: cargo run --example ed25519

  build-nostd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.nightly }}
          targets: thumbv7m-none-eabi

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-nostd-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-nostd-cargo

      - name: Build library
        run: cargo build --lib --no-default-features --features const_len --target thumbv7m-none-eabi -Z avoid-dev-deps

  document:
    needs:
      - build
      - build-msrv
      - build-nostd
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.nightly }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-doc-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-doc-cargo

      - name: Build docs
        run: cargo rustdoc --all-features -- --cfg docsrs

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/doc
          single-commit: true
